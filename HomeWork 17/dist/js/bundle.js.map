{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/parts/calc.js","webpack:///./src/js/parts/form.js","webpack:///./src/js/parts/modal.js","webpack:///./src/js/parts/slider.js","webpack:///./src/js/parts/tabs.js","webpack:///./src/js/parts/timer.js","webpack:///./src/js/script.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB,6BAA6B;;AAE7B,oDAAoD;AACpD;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL,qDAAqD;AACrD;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL,kDAAkD;AAClD,0DAA0D;AAC1D;AACA,SAAS;AACT,0BAA0B;AAC1B,8EAA8E;AAC9E;AACA,KAAK;AACL;AACA,sBAAsB,sB;;;;;;;;;;;AC3CtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAsD;AACtD,0CAA0C;;AAE1C;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;;AAEA,sDAAsD;;AAEtD,+BAA+B;AAC/B,wCAAwC;;AAExC,iCAAiC;AACjC;AACA,mDAAmD;AACnD;AACA;;AAEA,kDAAkD;;AAElD;AACA,6BAA6B;AAC7B;AACA,qCAAqC;AACrC,iBAAiB;AACjB,+CAA+C;;AAE/C,mCAAmC;;AAEnC,0EAA0E;AAC1E,8DAA8D;AAC9D;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,iBAAiB;AACjB,aAA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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/script.js\");\n","function calc() {\r\n    //Калькулятор на сайте\r\n    let persons = document.querySelectorAll('.counter-block-input')[0], //поле Количество людей\r\n        restDays = document.querySelectorAll('.counter-block-input')[1], //поле На сколько дней\r\n        place = document.getElementById('select'), //выбор базы отдыха\r\n        totalValue = document.getElementById('total'), //ощая сумма\r\n        personsSum = 0, //переменная для Количество людей\r\n        daysSum = 0, //переменная Количество дней\r\n        total = 0; //переменная общей суммы\r\n\r\n    totalValue.innerHTML = 0; //зануляем сумму на сайте\r\n\r\n    persons.addEventListener('change', function () { //при вводе в поле Количество людей считается сумма, с проверка ненулевого второго поля\r\n        personsSum = +this.value;\r\n        total = (personsSum + daysSum) * 4000;\r\n\r\n        if (restDays.value == '' || persons.value == '') {\r\n            totalValue.innerHTML = 0;\r\n        } else {\r\n            totalValue.innerHTML = total;\r\n        }\r\n    });\r\n\r\n    restDays.addEventListener('change', function () { //при вводе в поле На сколько дней считается сумма, с проверка ненулевого второго поля\r\n        daysSum = +this.value;\r\n        total = (personsSum + daysSum) * 4000;\r\n\r\n        if (persons.value == '' || restDays.value == '') {\r\n            totalValue.innerHTML = 0;\r\n        } else {\r\n            totalValue.innerHTML = total;\r\n        }\r\n    });\r\n\r\n    place.addEventListener('change', function () { //изменение суммы при выборе базы\r\n        if (restDays.value == '' || persons.value == '') { //если какое то из полей пустые - занулять сумму\r\n            totalValue.innerHTML = 0;\r\n        } else {\r\n            let a = total; //сумма, но она идет в качестве переменной, так что каждый раз будет такая же\r\n            totalValue.innerHTML = a * this.options[this.selectedIndex].value; //умножаем сумму на К-т базы\r\n        }\r\n    });\r\n}\r\nmodule.exports = calc; //экспортируем модуль","//Form ---------------------серверные запросы------------------------------------------------------------------\r\nfunction form() {\r\n    //объект с сообщениями выполнения запросов\r\n    let message = {\r\n        loading: 'Загрузка...',\r\n        success: 'Спасибо! Скоро мы с вами свяжемся!',\r\n        failure: 'Что-то пошло не так...'\r\n    };\r\n\r\n    //работаем с формой обратной связи \r\n    let form = document.querySelector('.main-form'), //сама форма\r\n        input = form.getElementsByTagName('input'), //поле ввода\r\n        statusMessage = document.createElement('div'); //новый раздел, где будем писать о статусе запроса(снизу формы)\r\n    statusMessage.classList.add('status'); //добавляем класс СТАТУС к новому разделу в форме\r\n\r\n    //функция для очистки полей\r\n    function clearInput() {\r\n        for (let i = 0; i < input.length; i++) {\r\n            input[i].value = '';\r\n        }\r\n        //alert('Поля очистились!');\r\n    }\r\n\r\n    form.addEventListener('submit', function (event) { //при нажатии на отправить - форма отправляется\r\n\r\n        event.preventDefault(); //чтобы страница не обновлялась(убираем стандартное поведение браузера)\r\n        form.appendChild(statusMessage); //добавляем в форму наш div\r\n\r\n        function smartRequest() { //описываем функцию \"умного\" запроса через промисы\r\n            return new Promise(function (resolve, reject) {\r\n                let request = new XMLHttpRequest(); //начинаем описывать и отправлять запрос\r\n                request.open('POST', 'server.php');\r\n                request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n\r\n                let formData = new FormData(form); //создаем объект formData\r\n\r\n                //превращаем formData в JSON-объект\r\n                let obj = {}; //создаем пустой JS-объект\r\n                formData.forEach(function (value, key) {\r\n                    obj[key] = value; //методом forEach вносим из formData в пустой JS-объект значения ключ-значение(поле формы - значение)\r\n                });\r\n                let json = JSON.stringify(obj); //превращаем наш JS-объект в JSON-объект\r\n\r\n                request.send(json); //отправляем JSON-объект\r\n\r\n                request.addEventListener('readystatechange', function () { //показ в сообщении статуса запроса\r\n                    statusMessage.innerHTML = message.loading; //\"загрузка\", если еще не загрузился\r\n                    if (request.readyState === 4) {\r\n                        if (request.status == 200) {\r\n                            resolve();\r\n                        } else {\r\n                            reject();\r\n                        }\r\n                    }\r\n                });\r\n            }); //конец промиса            \r\n\r\n        } //конец функции smartRequest \r\n\r\n        smartRequest(form) //запускаем функцию smartRequest\r\n            .then(() => statusMessage.innerHTML = message.success) //в случае успеха промиса\r\n            .then(clearInput) //чистим поля\r\n            .catch(() => statusMessage.innerHTML = message.failure); //в случае провала промиса\r\n        //clearInput(); \r\n    }); //конец прослушивателя формы\r\n\r\n    //по заданию для контактной формы !!! -------------------!---------------------------------\r\n    let contactForm = document.querySelector('#form'), //сама контакная форма(та, что снизу)\r\n        contactInput = contactForm.getElementsByTagName('input'); //поле ввода для контакной формы\r\n\r\n    contactForm.addEventListener('submit', function (event) { //при нажатии на отправить - форма отправляется\r\n        event.preventDefault(); //чтобы страница не обновлялась(убираем стандартное поведение браузера)\r\n\r\n        contactForm.appendChild(statusMessage); //добавляем в форму наш div\r\n\r\n        function smartRequestContact() { //описываем функцию \"умного\" запроса через промисы\r\n            return new Promise(function (resolve, reject) {\r\n                let request = new XMLHttpRequest(); //начинаем описывать и отправлять запрос\r\n                request.open('POST', 'server.php');\r\n                request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n\r\n                let formData = new FormData(contactForm); //создаем объект formData\r\n\r\n                //превращаем formData в JSON-объект\r\n                let obj = {}; //создаем пустой JS-объект\r\n                formData.forEach(function (value, key) {\r\n                    obj[key] = value; //методом forEach вносим из formData в пустой JS-объект значения ключ-значение(поле формы - значение)\r\n                });\r\n                let json = JSON.stringify(obj); //превращаем наш JS-объект в JSON-объект\r\n\r\n                request.send(json); //отправляем JSON-объект\r\n\r\n                request.addEventListener('readystatechange', function () { //показ в сообщении статуса запроса\r\n                    statusMessage.innerHTML = message.loading; //\"загрузка\", если еще не загрузился\r\n                    if (request.readyState === 4) {\r\n                        if (request.status == 200) {\r\n                            resolve();\r\n                        } else {\r\n                            reject();\r\n                        }\r\n                    }\r\n                });\r\n\r\n            }); //конец промиса\r\n\r\n        } //конец функции smartRequest \r\n\r\n        function clearInputContact() {\r\n            for (let i = 0; i < contactInput.length; i++) {\r\n                contactInput[i].value = '';\r\n            }\r\n            //alert('Поля очистились!');\r\n        }\r\n\r\n        smartRequestContact() //запускаем функцию smartRequest\r\n            .then(() => statusMessage.innerHTML = message.success) //в  случае успеха промиса\r\n            .then(clearInputContact) //чистим поля\r\n            .catch(() => statusMessage.innerHTML = message.failure); //в  случае провала промиса\r\n        //clearInput();\r\n        //.finally(() => alert('сработало finally!')) \r\n\r\n    }); //конец прослушивателя формы\r\n}\r\nmodule.exports = form; //экспортируем модуль","//Modal окно при нажатии кнопки \"Унать больше\" под таймером\r\nfunction modal() {\r\n    let more = document.querySelector('.more'), //получаем форму \"узнать больше\"\r\n        overlay = document.querySelector('.overlay'), //получаем анимацию открытия\r\n        close = document.querySelector('.popup-close'); //получаем крестик \"закрыть\"\r\n\r\n    more.addEventListener('click', function () { //при нажатии на кнопку \"Унать больше\"\r\n        overlay.style.display = 'block'; //развернуть форму\r\n        this.classList.add('more-splash'); //анимация открытия\r\n        document.body.style.overflow = 'hidden'; //отключаем прокрутку страницы на заднем фоне\r\n    });\r\n\r\n    close.addEventListener('click', function () { //при нажатии на крестик сверху справа в форме\r\n        overlay.style.display = 'none'; //закрываем/убираем форму\r\n        more.classList.remove('more-splash'); //отключаем анимацию открытия (окно закроется мгновенно)\r\n        document.body.style.overflow = ''; //включаем прокрутку страницы на заднем фоне\r\n    });\r\n\r\n    //Modal окно при нажатии кнопки \"Унать подробнее\" внизу контента\r\n    let descriptionbtn = document.querySelectorAll('.description-btn'); //массив кнопок \"узнать подробнее\"\r\n\r\n    //перебираем все 4 кнопки \"узнать подробнее\" и назначаем на каждую прослушиватель как у кнопки \"узнать больше\"\r\n    descriptionbtn.forEach(function (item) {\r\n        item.addEventListener('click', function () {\r\n            overlay.style.display = 'block'; //развернуть форму\r\n            more.classList.add('more-splash'); //анимация открытия\r\n            document.body.style.overflow = 'hidden'; //отключаем прокрутку страницы на заднем фоне\r\n            //а обработка крестика уже функционирует выше!\r\n        });\r\n    });\r\n}\r\nmodule.exports = modal; //экспортируем модуль","function slider() {\r\n    //Slider ----------------------------------------------- Slider ------------------------------------------------\r\n    let slideIndex = 1, //индекс текущего слайда\r\n        slides = document.querySelectorAll('.slider-item'), //сами слайды\r\n        prev = document.querySelector('.prev'), //стрелочка НАЗАД\r\n        next = document.querySelector('.next'), //стрелочка ВПЕРЕД\r\n        dotsWrap = document.querySelector('.slider-dots'), //обёртка точек слайдера(тот раздел, где точки)\r\n        dots = document.querySelectorAll('.dot'); //сами точки\r\n\r\n    showSlides(slideIndex); //запускаем показ слайдов\r\n\r\n    function showSlides(n) {\r\n        if (n > slides.length) { //чтобы перематывалось в начало, если дошло до конца\r\n            slideIndex = 1;\r\n        }\r\n        if (n < 1) { //чтобы перематывалось в конец, если нажали стрелку НАЗАД, когда стоит первый слайд\r\n            slideIndex = slides.length;\r\n        }\r\n        slides.forEach((item) => item.style.display = 'none'); //сначала скрываем все слайды\r\n        dots.forEach((item) => item.classList.remove('dot-active')); //убираем \"активность\" с любых точек\r\n        slides[slideIndex - 1].style.display = 'block'; //показываем нужный слайд(сначала первый)\r\n        dots[slideIndex - 1].classList.add('dot-active'); //активируется нужная точка(она становится черной и ее не видно)\r\n    }\r\n\r\n    function plusSlides(n) { //показ следующего слайда\r\n        showSlides(slideIndex += n);\r\n    }\r\n\r\n    function currentSlide(n) { //показ текущего слайда\r\n        showSlides(slideIndex = n);\r\n    }\r\n\r\n    prev.addEventListener('click', function () { //при нажатии на стрелку НАЗАД - показ прдыдущего слайда\r\n        plusSlides(-1);\r\n    });\r\n    next.addEventListener('click', function () { //при нажатии на стрелку ВПЕРЕД - показ следующего слайда\r\n        plusSlides(1);\r\n    });\r\n\r\n    dotsWrap.addEventListener('click', function (event) { //при клике на точке - показывается соответствующий слайдер\r\n        for (let i = 0; i < dots.length + 1; i++) { //перебираем все слайдеры\r\n            if (event.target.classList.contains('dot') && event.target == dots[i - 1]) { //делегирование, i-1, потому что  slideIndex д.б. от 1 до 4, это номер слайда, а не индекс массива\r\n                currentSlide(i); //показать нужный слайдер\r\n            }\r\n        }\r\n    });\r\n}\r\nmodule.exports = slider; //экспортируем модуль","function tabs() {\r\n    let tab = document.querySelectorAll('.info-header-tab'), //все табы с .info-header-tab\r\n        info = document.querySelector('.info-header'), //элемент-родитель .info-header\r\n        tabContent = document.querySelectorAll('.info-tabcontent'); //тексты к табам .info-tabcontent\r\n\r\n    function hideTabContent(a) { //функция, скрывающая контент табов(для начала)\r\n        for (let i = a; i < tabContent.length; i++) {\r\n            tabContent[i].classList.remove('show');\r\n            tabContent[i].classList.add('hide');\r\n        }\r\n    }\r\n\r\n    hideTabContent(1); //скрыли 2-4 таб, первый остался видимым (0-ой, который, по массивам)\r\n\r\n    function showTabContent(b) { //показываем содержимое табов\r\n        if (tabContent[b].classList.contains('hide')) {\r\n            tabContent[b].classList.remove('hide');\r\n            tabContent[b].classList.add('show');\r\n        }\r\n    }\r\n\r\n    info.addEventListener('click', function (event) { //при клике на определенный таб - показываем определенный контент ЕСЛИ ПРОЩЕ, то мы определяем НОМЕР ткнутого таба, скрываем все контенты, а затем показываем только нужный[i-ый] контент, совпадающий по номеру с ткнутым табом\r\n        let target = event.target;\r\n        if (target && target.classList.contains('info-header-tab')) { //если ткнули в элемент(существующий) и этот элемент ТОТ\r\n            for (let i = 0; i < tab.length; i++) { //итерируем по всем табам\r\n                if (target == tab[i]) { //к кликнутому пользователем элементу подобрали через итерацию нужный таб: \r\n                    //                    РАЗВЁРНУТО: И дальше мы реализуем такую логику, что при клике на блок с классом info-header:\r\n                    // 1) идет проверка, что мы попали в блок, содержащий класс info-header-tab + то, что этот элемент вообще поддерживает событие клика ( if (target && target.classList.contains('info-header-tab')) { )\r\n                    // 2) Запускаем цикл, чтобы прогнать все табы по порядку (for(let i = 0; i < tab.length; i++))\r\n                    // 3) Теперь внутри цикла в условии мы проверяем что тот таб, в который тыкнул пользователь совпадает с итерируемым. И когда это условие выполнится - мы запускаем функцию показа именного этого таба. ( if (target == tab[i]) { )\r\n                    hideTabContent(0); //скрывает все табы, чтобы потом показать один, требуемый\r\n                    showTabContent(i); //показываем нужный таб\r\n                    break; //когда нашли и всё сделали, выходим из цикла, чтобы не проверять остальные, заведомо неподходящие варианты\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\nmodule.exports = tabs; //экспортируем модуль","function timer() {\r\n    //Timer\r\n    let deadline = '2019-12-31 07:00';\r\n\r\n    function getTimeRemainig(endtime) {\r\n        let t = Date.parse(endtime) - Date.parse(new Date()), //сколько осталось до дедлайна\r\n            seconds = Math.floor((t / 1000) % 60), //получаем количество целых секунд\r\n            minutes = Math.floor((t / 1000 / 60) % 60), //получаем количество целых минут\r\n            hours = Math.floor((t / 1000 / 60 / 60) % 24), //получаем количество целых часов\r\n            days = Math.floor((t / 1000 / 60 / 60 / 24)); //получаем количество целых дней, чтобы показывались дни до дедлайна\r\n\r\n        return { //возвращаем объект с данными об оставшемся до дедлайна времени\r\n            'total': t, //все время в миллисекундах\r\n            'seconds': seconds,\r\n            'minutes': minutes,\r\n            'hours': hours,\r\n            'days': days\r\n        };\r\n    }\r\n\r\n    function setClock(id, endtime) { //получаем данные на HTML странице\r\n        let timer = document.getElementById(id),\r\n            days = timer.querySelector('.days'), //добавляю дни\r\n            hours = timer.querySelector('.hours'),\r\n            minutes = timer.querySelector('.minutes'),\r\n            seconds = timer.querySelector('.seconds'),\r\n            timerInterval = setInterval(updateClock, 1000);\r\n\r\n        function updateClock() { //обновляем цифры на странице\r\n            let t = getTimeRemainig(endtime); //записываем в t весь объект с временными параметрами\r\n            days.textContent = t.days; //обновляем дни на странице, 0 в начале ставить НЕ надо\r\n            if (t.hours >= 10) { //если количество часов больше или равно 10\r\n                hours.textContent = t.hours; //то вставляем в блок без изменений\r\n            } else { //если 9 и меньше(т.е. одна цифра)\r\n                hours.textContent = '0' + t.hours; //то добавляем в начало 0\r\n            }\r\n            if (t.minutes >= 10) { //если количество часов больше или равно 10\r\n                minutes.textContent = t.minutes; //то вставляем в блок без изменений\r\n            } else { //если 9 и меньше(т.е. одна цифра)\r\n                minutes.textContent = '0' + t.minutes; //то добавляем в начало 0\r\n            }\r\n            if (t.seconds >= 10) { //если количество часов больше или равно 10\r\n                seconds.textContent = t.seconds; //то вставляем в блок без изменений\r\n            } else { //если 9 и меньше(т.е. одна цифра)\r\n                seconds.textContent = '0' + t.seconds; //то добавляем в начало 0\r\n            }\r\n\r\n            if (t.total <= 0) { //если время вышло\r\n                clearInterval(timerInterval); //останавливаем таймер\r\n                days.textContent = '0'; //ставим нули на местах цифр времени\r\n                hours.textContent = '00'; //ставим нули на местах цифр времени\r\n                minutes.textContent = '00'; //ставим нули на местах цифр времени\r\n                seconds.textContent = '00'; //ставим нули на местах цифр времени\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setClock('timer', deadline); //запускаем таймер (и весь процесс)\r\n}\r\nmodule.exports = timer; //экспортируем модуль","window.addEventListener('DOMContentLoaded', function () { //после загрузки DOM-дерева назначаем событие\r\n\r\n    \"use strict\";\r\n    let calc = require('./parts/calc.js'),\r\n        form = require('./parts/form.js'),\r\n        slider = require('./parts/slider.js'),\r\n        tabs = require('./parts/tabs.js'),\r\n        timer = require('./parts/timer.js'),\r\n        modal = require('./parts/modal.js');\r\n\r\n    calc();\r\n    form();\r\n    slider();\r\n    tabs();\r\n    timer();\r\n    modal();\r\n});"],"sourceRoot":""}